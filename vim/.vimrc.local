set nocursorline " don't highlight current line

" keyboard shortcuts
inoremap jj <ESC>

" gui settings
if (&t_Co == 256 || has('gui_running'))
  if ($TERM_PROGRAM == 'iTerm.app')
    colorscheme solarized
  else
    colorscheme desert
  endif
endif

" Disambiguate ,a & ,t from the Align plugin, making them fast again.
"
" This section is here to prevent AlignMaps from adding a bunch of mappings
" that interfere with the very-common ,a and ,t mappings. This will get run
" at every startup to remove the AlignMaps for the *next* vim startup.
"
" If you do want the AlignMaps mappings, remove this section, remove
" ~/.vim/bundle/Align, and re-run rake in maximum-awesome.
function! s:RemoveConflictingAlignMaps()
  if exists("g:loaded_AlignMapsPlugin")
    AlignMapsClean
  endif
endfunction
command! -nargs=0 RemoveConflictingAlignMaps call s:RemoveConflictingAlignMaps()
silent! autocmd VimEnter * RemoveConflictingAlignMaps


set shiftwidth=4                                             " normal mode indentation commands use 2 spaces
set softtabstop=4                                            " insert mode tab and backspace use 2 spaces
set tabstop=4                                                " actual tabs occupy 8 characters
set t_Co=256
set nobomb
set noshowmode
"set hlsearch
set foldmethod=indent
nnoremap <tab> %
nnoremap j gj
nnoremap k gk
nnoremap / /\v
vnoremap / /\v
au FocusLost * : wa

python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
"let g:Powerline_symbols = 'fancy'
set guifont=Inconsolata\ for\ Powerline

"{{{ syntastic
let g:syntastic_check_on_open               = 1
let g:syntastic_python_checkers             = ['pep8', 'pyflakes']
let g:syntastic_python_pep8_args            = '--ignore=E501'
let g:syntastic_always_populate_loc_list    = 1
""}}}
